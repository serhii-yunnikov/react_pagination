{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","numberOfPages","total","perPage","Math","ceil","Number","currentItems","currentPage","start","slice","Pagination","onPageChange","prevButton","nextButton","pagesCollection","className","classNames","disabled","href","onClick","map","num","active","number","itemsNumber","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","items","currentInfo","id","value","onChange","event","target","htmlFor","page","current","max","min","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGF,SAASG,EAAcC,EAAeC,GAC3C,OAAOC,KAAKC,KAAKH,EAAQI,OAAOH,IAG3B,SAASI,EACdL,EACAM,EACAL,GAEA,IACMM,GAASD,EAAc,IAAML,EAEnC,OAHoBR,EAAW,EAAGO,GAGfQ,MAAMD,EAAOA,IAASN,G,WCV9BQ,EAA8B,SAAC,GAOrC,IANLT,EAMI,EANJA,MACAC,EAKI,EALJA,QACAK,EAII,EAJJA,YACAI,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAkBpB,EAAW,EAAGM,EAAcC,EAAOC,IAE3D,OACE,qCACE,qBAAIa,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMP,KALjB,oBAUDE,EAAgBM,KAAI,SAACC,GAAD,OACnB,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAAQd,IAFpB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUV,IAAgBP,EAAcC,EAAOC,KAFnD,SAKE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBP,EAAcC,EAAOC,GACpDiB,QAAS,kBAAMN,KALjB,uBAYJ,6BACGP,EAAaL,EAAOM,EAAaL,GAASkB,KAAI,SAACG,GAAD,OAC7C,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YCzEXC,EAAc,CAAC,IAAK,IAAK,KAAM,MAExBC,EAAgB,WAC3B,MAAwCC,mBAASF,EAAY,IAA7D,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBsB,EAApB,KAEMC,EAAQxB,EAAa,GAAIC,EAAaoB,GAuBtCI,EAAW,eAAWxB,EAAX,mBAAiCuB,EAAM,GAAvC,cAA+CA,EAAMrB,OAAO,GAA5D,WAEjB,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAAoCgB,IAEpC,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAON,EACPO,SApCW,SAACC,GACpB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERL,EAAgBK,GAChBJ,EAAe,IA2BT,SAOGL,EAAYJ,KAAI,SAAAG,GAAM,OACrB,wBACEU,MAAOV,EADT,SAIGA,GAFIA,UAQb,uBAAOc,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEd,MAAO,GACPC,QAASyB,EACTpB,YAAaA,EACbI,aAlDe,SAAC2B,GACpBT,EAAeS,IAkDX1B,WA/Ca,WACjBiB,GAAe,SAAAU,GAAO,OAAIpC,KAAKqC,IAAI,EAAGD,EAAU,OA+C5C1B,WA5Ca,WACjBgB,GAAe,SAAAU,GAAO,OAAIpC,KAAKsC,IAC7BzC,EAAc,GAAI2B,GAAeY,EAAU,aC3BjDG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.76d18334.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function numberOfPages(total: number, perPage: string): number {\n  return Math.ceil(total / Number(perPage));\n}\n\nexport function currentItems(\n  total: number,\n  currentPage: number,\n  perPage: string,\n): number[] {\n  const itemNumbers = getNumbers(1, total);\n  const start = (currentPage - 1) * +perPage;\n\n  return itemNumbers.slice(start, start + +perPage);\n}\n","import classNames from 'classnames';\nimport { getNumbers, numberOfPages, currentItems } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: string,\n  currentPage: number,\n  onPageChange: CallableFunction,\n  prevButton: CallableFunction,\n  nextButton: CallableFunction,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  prevButton,\n  nextButton,\n}) => {\n  const pagesCollection = getNumbers(1, numberOfPages(total, perPage));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => prevButton()}\n          >\n            «\n          </a>\n        </li>\n        {pagesCollection.map((num: number) => (\n          <li\n            className={classNames('page-item', {\n              active: num === currentPage,\n            })}\n            key={num}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${num}`}\n              onClick={() => onPageChange(num)}\n            >\n              {num}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === numberOfPages(total, perPage),\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === numberOfPages(total, perPage)}\n            onClick={() => nextButton()}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {currentItems(total, currentPage, perPage).map((number: number) => (\n          <li\n            data-cy=\"item\"\n            key={number}\n          >\n            {`Item ${number}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { currentItems, numberOfPages } from './utils';\n\nconst itemsNumber = ['3', '5', '10', '20'];\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(itemsNumber[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const items = currentItems(42, currentPage, itemsPerPage);\n\n  const handleOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const prevButton = () => {\n    setCurrentPage(current => Math.max(1, current - 1));\n  };\n\n  const nextButton = () => {\n    setCurrentPage(current => Math.min(\n      numberOfPages(42, itemsPerPage), current + 1,\n    ));\n  };\n\n  const currentInfo = `Page ${currentPage} (items ${items[0]} - ${items.slice(-1)} of 42)`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">{currentInfo}</p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleOption}\n          >\n            {itemsNumber.map(number => (\n              <option\n                value={number}\n                key={number}\n              >\n                {number}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={42}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n        prevButton={prevButton}\n        nextButton={nextButton}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}