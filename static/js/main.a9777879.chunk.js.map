{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","currentItems","onPageChange","prevButton","nextButton","numberOfPages","Math","ceil","pagesCollection","className","classNames","disabled","href","onClick","map","num","active","number","itemsNumber","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","start","slice","Number","currentInfo","id","value","onChange","event","target","htmlFor","page","current","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCMIG,EAA8B,SAAC,GAQrC,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAgBC,KAAKC,KAAKT,GAASC,GACnCS,EAAkBjB,EAAW,EAAGc,GAEtC,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBX,IAFd,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QAAS,kBAAMV,KALjB,oBAUDK,EAAgBM,KAAI,SAACC,GAAD,OACnB,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAAQf,IAFpB,SAME,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUX,IAAgBK,IAF9B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBK,EAC/BQ,QAAS,kBAAMT,KALjB,uBAYJ,6BACGH,EAAaa,KAAI,SAACG,GAAD,OAChB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YC5EXC,EAAc,CAAC,IAAK,IAAK,KAAM,MAExBC,EAAgB,WAC3B,MAAwCC,mBAASF,EAAY,IAA7D,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBuB,EAApB,KAGMC,GAASxB,EAAc,IAAMqB,EAC7BpB,EAFcV,EAAW,EAAG,IAGpBkC,MAAMD,EAAOA,EAAQE,OAAOL,IAqBpCM,EAAW,eAAW3B,EAAX,mBAAiCC,EAAa,GAA9C,cAAsDA,EAAawB,OAAO,GAA1E,WAEjB,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAAoCkB,IAEpC,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOR,EACPS,SAlCW,SAACC,GACpB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERP,EAAgBO,GAChBN,EAAe,IAyBT,SAOGL,EAAYJ,KAAI,SAAAG,GAAM,OACrB,wBACEY,MAAOZ,EADT,SAIGA,GAFIA,UAQb,uBAAOgB,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEX,MAAO,GACPC,QAASsB,EACTrB,YAAaA,EACbC,aAAcA,EACdC,aAjDe,SAACgC,GACpBX,EAAeW,IAiDX/B,WA9Ca,WACjBoB,GAAe,SAAAY,GAAO,OAAIA,EAAU,MA8ChC/B,WA3Ca,WACjBmB,GAAe,SAAAY,GAAO,OAAIA,EAAU,YC7BxCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a9777879.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: string,\n  currentPage: number,\n  currentItems: number[],\n  onPageChange: CallableFunction,\n  prevButton: CallableFunction,\n  nextButton: CallableFunction,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  currentItems,\n  onPageChange,\n  prevButton,\n  nextButton,\n}) => {\n  const numberOfPages = Math.ceil(total / +perPage);\n  const pagesCollection = getNumbers(1, numberOfPages);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => prevButton()}\n          >\n            «\n          </a>\n        </li>\n        {pagesCollection.map((num: number) => (\n          <li\n            className={classNames('page-item', {\n              active: num === currentPage,\n            })}\n            key={num}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${num}`}\n              onClick={() => onPageChange(num)}\n            >\n              {num}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === numberOfPages,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === numberOfPages}\n            onClick={() => nextButton()}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {currentItems.map((number: number) => (\n          <li\n            data-cy=\"item\"\n            key={number}\n          >\n            {`Item ${number}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst itemsNumber = ['3', '5', '10', '20'];\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(itemsNumber[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemNumbers = getNumbers(1, 42);\n  const start = (currentPage - 1) * +itemsPerPage;\n  const currentItems: number[]\n  = itemNumbers.slice(start, start + Number(itemsPerPage));\n\n  const handleOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const prevButton = () => {\n    setCurrentPage(current => current - 1);\n  };\n\n  const nextButton = () => {\n    setCurrentPage(current => current + 1);\n  };\n\n  const currentInfo = `Page ${currentPage} (items ${currentItems[0]} - ${currentItems.slice(-1)} of 42)`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">{currentInfo}</p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perItemselector\"\n            id=\"perItemselector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleOption}\n          >\n            {itemsNumber.map(number => (\n              <option\n                value={number}\n                key={number}\n              >\n                {number}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perItemselector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={42}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        currentItems={currentItems}\n        onPageChange={onPageChange}\n        prevButton={prevButton}\n        nextButton={nextButton}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}